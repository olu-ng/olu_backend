name: .NET 9 CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🛠️ Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: 📦 Restore dependencies
        run: dotnet restore OluBackendApp.csproj

      - name: 🔨 Build the app
        run: dotnet build OluBackendApp.csproj --configuration Release --no-restore

      - name: 🧪 Run tests
        run: dotnet test --no-build --verbosity normal || echo "⚠️ No tests to run"

      - name: 📅 Auto-generate EF migration if model has changed
        run: |
          dotnet tool install --global dotnet-ef
          export PATH="$PATH:/home/runner/.dotnet/tools"
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "⚙️ Checking EF Core model changes..."
          if dotnet ef migrations add AutoGeneratedMigration_$TIMESTAMP --no-build; then
            echo "✅ New migration added."
          else
            echo "ℹ️ No model changes."
          fi

      - name: 📥 Commit migration (if generated)
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Migrations/ || true
          git diff --cached --quiet || git commit -m "🔁 Auto-generated EF migration"
          git push || echo "ℹ️ Nothing to push"

      - name: 🪄 Fix config filename casing
        run: |
          if [ -f "appsettings.production.json" ]; then
            mv -f appsettings.production.json appsettings.Production.json
          fi

      - name: 🚀 Deploy to Lightsail and rebuild containers
        run: |
          echo "🔐 Set up SSH"
          mkdir -p ~/.ssh
          echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          echo "📤 Upload source code to server"
          rsync -avz --delete \
            --exclude 'bin' --exclude 'obj' --exclude '.git' \
            -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" ./ \
            ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:/opt/olu_backend/source/

          echo "🐳 Remote Docker rebuild"
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} << 'EOF'
            cd /opt/olu_backend/source
            chmod +x ./wait-for-it.sh || true
            docker compose down || true
            docker system prune -af || true
            docker volume prune -f || true
            docker compose build --no-cache
            docker compose up -d
          EOF
